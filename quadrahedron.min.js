var quadrahedron={};var qh=quadrahedron;qh.getType=function(a){var what=Object.prototype.toString;if(jQuery.isPlainObject(a)){return"object";}
if(typeof a==='string'){return"string";}
if(what.call([])=="[object Array]"){return"array";}};qh.checkList=function(args){var def=function(arg,defaultValue){args[arg]=args[arg]||defaultValue;};var args=args||{};def("verbose",false);def("silent",false);var tests={requirejs:function(){return!(typeof(requirejs)=="undefined");},jQuery:function(){return!(typeof(jQuery)=="undefined");},angular:function(){return!(typeof(angular)=="undefined");},moduleCount:function(){return qh.moduleManager.qhModules.getPaths("module").length;},};var success=true;for(var testName in tests){var test=tests[testName];var testSuccess=test();var msg="FAILED";var fnc="error";if(testSuccess){msg="Success";fnc="log";}else{success=false;}
if((args.verbose||!testSuccess)&&!args.silent){console[fnc]("Checking",testName,":",msg);}}
return success;};qh.modules=function(a,b){var ml=qh.moduleLoader;switch(qh.getType(a)){case"string":{if(b){ml.loadModulesInPath(b,a);}else{ml.loadModuleList(a);}}break;case"object":{ml.loadModuleConfig(a);}break;case"array":{ml.loadModulesByArray(a);}break;}
qh.loader.load();};qh.app=function(getAppElement){qh.moduleManager.app.getAppElement=getAppElement;}
qh.preloader=function(getPreloaderElement){qh.loader.getPreloaderElement=getPreloaderElement;}
qh.loader=(function(){var ldr={};ldr.loaded=false;ldr.readyFunctions=[];ldr.getPreloaderElement=function(){};ldr.load=function(){if(qh.checkList({silent:true})){$(function(){requirejs(qh.moduleManager.qhModules.getPaths("module"),function(){requirejs(qh.moduleManager.qhModules.getPaths("component"),function(){ldr.loaded=true;if(qh.moduleManager.app.modules.length){try{angular.bootstrap(qh.moduleManager.app.getAppElement(),qh.moduleManager.app.modules);$(ldr.getPreloaderElement()).hide();angular.forEach(ldr.readyFunctions,function(fnc){fnc();});}catch(e){console.error(e.stack||e.message||e);}}else{throw"No app element is set. A module must have a configuration property 'app' set to 'true'.";}});});});}};return ldr;}());qh.moduleLoader=(function(){var ml={};ml.loadModuleConfig=function(moduleConfig){var c=moduleConfig;var basePath=c.basePath||"";if(c.src){ml.loadModuleList(c.src);}
if(c.list){switch(qh.getType(c.list)){case"array":{ml.loadModulesInPath(c.list,basePath);}break;case"object":{console.error("Loading config objects is not supported yet");}break;}}};ml.loadModuleList=function(moduleListPath){jQuery.getJSON(moduleListPath,function(response,status,jqxhr){ml.loadModuleConfig(response);qh.loader.load();}).fail(function(){throw"Module listing JSON at "+moduleListPath+" is invalid.";});};ml.loadModulesInPath=function(moduleNames,path){for(var i in moduleNames){var moduleName=moduleNames[i];var qhModule=qh.moduleManager.qhModules.add(moduleName,path);};};ml.loadModulesByArray=function(moduleNames){return ml.loadModulesInPath(moduleNames);};ml.loadModuleComponent=function(){console.error("Should there really be module components loaded from here.");};return ml;}());qh.ready=function(fnc){qh.loader.readyFunctions.push(fnc);};qh.moduleManager=(function(){var man={};man.qhModules=(function(){var qhm={};qhm.qhModule=function(name,basePath){var _this=this;_this.name=name;_this.basePath=basePath||"module";_this.getPath=function(){return _this.basePath+"/"+_this.name;};_this.getConfigFilePath=function(){return _this.getPath()+"/module.js";};_this.getComponent=function(type,name){if(_this.components[type][name]){return _this.components[type][name];}else{throw"No component in module '"+_this.name+"' with a '"+type+"' named '"+name+"'";}};_this.components={};_this.addComponent=function(type,name){if(!_this.components[type]){_this.components[type]={};}
_this.components[type][name]=new qhm.qhModuleComponent(_this.name,type,name);return _this.getComponent(type,name);};_this.getComponentPaths=function(){var ret=[];jQuery.each(_this.components,function(type,components){jQuery.each(components,function(name,component){ret.push(component.getPath());});});return ret;};};qhm.qhModuleComponent=function(moduleName,componentType,name){var _this=this;_this.name=name;_this.type=componentType;_this.qhModule=qhm.get(moduleName);_this.getPath=function(){return([_this.qhModule.getPath(),_this.type,_this.name].join("/"))+".js";};_this.getFullName=function(){return[_this.qhModule.name,_this.type,_this.name].join(".");};};qhm.list={};qhm.add=function(name,basePath){qhm.list[name]=new qhm.qhModule(name,basePath);return qhm.get(name);};qhm.get=function(name){var got=qhm.list[name];if(!got){throw"Attempted to get module '"+name+"' which doesn't exist.";}
return got;};qhm.getPaths=function(type){var ret=[];angular.forEach(qhm.list,function(module){switch(type){case"module":{ret.push(module.getConfigFilePath());}break;case"component":{ret=ret.concat(module.getComponentPaths());}break;}});return ret;};return qhm;}());man.app={getAppElement:function(){},modules:[]};man.angularModules={};man.setModule=function(name,config){var childModules=[];var paths=[];var qhModule=man.qhModules.get(name);var requiredModules=[];jQuery.each(config,function(componentType,a){switch(componentType){case"app":{}break;case"require":{requiredModules=a;}break;default:{var components=a;angular.forEach(components,function(componentName){var component=qhModule.addComponent(componentType,componentName);});}break;}});man.angularModules[name]=angular.module(name,requiredModules);if(config.app){man.app.modules.push(name);}};man.checkRequiredModules=function(){var loaded=qh.moduleManager.angularModules;var found={};var errors=[];angular.forEach(loaded,function(ngModule,moduleName){found[moduleName]=found[moduleName]||false;if(ngModule.requires.length>0){found[moduleName]=true;angular.forEach(ngModule.requires,function(requiredModuleName){found[requiredModuleName]=true;});}});angular.forEach(found,function(flag,moduleName){if(!flag){errors.push(moduleName);}});if(errors.length>0){return["Modules loaded but not required by any module: "+errors.join(",")];}else{return[];}};return man;}());qh.setModule=function(name,config){qh.moduleManager.setModule(name,config);};qh.getModule=function(name){if(qh.moduleManager.angularModules[name]){return qh.moduleManager.angularModules[name];}else{throw"Unknown Module Exception. '"+name+"' is not recognised. The module name must be one of: "+Object.keys(qh.moduleManager.angularModules).join(", ");}};qh.getQHModule=function(name){return qh.moduleManager.qhModules.get(name);};qh.component=function(moduleName,moduleComponentSetup){return moduleComponentSetup(qh.getModule(moduleName),qh.getQHModule(moduleName));};qh.debug=function(){var errors=[];errors=errors.concat(quadrahedron.moduleManager.checkRequiredModules());return errors;};